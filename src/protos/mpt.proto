syntax = "proto3";

package serialization;

option java_outer_classname = "MptSerialization";

/**
*	Node in the merkle prefix trie 
*/
message Node{
	oneof node {
		InteriorNode interior_node = 1;
		Leaf leaf = 2;
		Stub stub = 3;
	}
}

/**
*	Stub is just a hash value 
* 	(could be an InteriorNode or a Leaf)
*/
message Stub {
	bytes hash = 1;
}

/**
*	InteriorNode has left or right children.
*	Only non-empty children need to be included.
*/
message InteriorNode {
	Node left = 1;
	Node right = 2;
}

/**
*	Leaf in the tree
*/
message Leaf{
	// technically we only need to send the keyhash,
	// but this might be more useful
	bytes key = 1;	
	bytes value = 2;
}

/**
*	A full or partial Merkle Prefix
*	Trie 
*/
message MerklePrefixTrie{
	Node root = 1;
	
}

/**
*	An Update. In the MerklePrefixTrie message, the locations 
*	of the nodes is implict from the serialization.
* 	However if we wish to send only the updated values
* 	(and use a caching scheme on the client) we need to 
* 	make the location explicit
*/
message Update{
	// the full_path + index are just a way to 
	// transmit a prefix (location) in the tree
	bytes full_path = 1;
	uint32 index = 2;
	oneof node {
		Stub stub = 3;
		Leaf leaf = 4;
	}
}

/**
*	Updates to a Merkle Prefix Trie
*/
message MerklePrefixTrieUpdate{
	repeated Update updates = 1;
}









